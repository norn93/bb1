type: "diff_drive_controller/DiffDriveController"
publish_rate: 50

left_wheel: ['base_to_left_front_wheel_joint', 'base_to_left_back_wheel_joint']
right_wheel: ['base_to_right_front_wheel_joint', 'base_to_right_back_wheel_joint']

wheel_separation: 0.29

cmd_vel_timeout: 0.25

 # Wheel separation and radius multipliers
  #wheel_separation_multiplier: 1.5 # default: 1.0
  #wheel_radius_multiplier    : 1.0 # default: 1.0

# Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  #enable_odom_tf: false

# Odometry covariances for the encoder output of the robot. These values should
# be tuned to your robot's sample odometry data, but these values are a good place
# to start
pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

#this could be the holy grail:
publish_wheel_joint_controller_state: true

# Top level frame (link) of the robot description
base_frame_id: base_link

# Velocity and acceleration limits for the robot
linear:
  x:
    has_velocity_limits    : true
    #max_velocity           : 1.0     # m/s
    max_velocity           : 2.0    # m/s
    has_acceleration_limits: true
    #max_acceleration       : 0.6   # m/s^2
    max_acceleration       : 1.0   # m/s^2
angular:
  z:
    has_velocity_limits    : true
    #max_velocity           : 1.0   # rad/s
    max_velocity           : 1.0   # rad/s
    has_acceleration_limits: true
    #max_acceleration       : 2.0   # rad/s^2
    max_acceleration       : 2.0   # rad/s^2
